name: Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests
        run: pnpm test:run
        env:
          RESEND_API_KEY: test-api-key
          RESEND_FROM_EMAIL: test@example.com
          RESEND_REPLY_TO_EMAIL: reply@example.com

      - name: Run test coverage
        run: pnpm test:coverage
        env:
          RESEND_API_KEY: test-api-key
          RESEND_FROM_EMAIL: test@example.com
          RESEND_REPLY_TO_EMAIL: reply@example.com

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-report
          path: coverage/

      - name: Run linter
        run: pnpm lint

  build:
    runs-on: ubuntu-latest
    needs: test

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build application
        run: pnpm build
        env:
          RESEND_API_KEY: ${{ secrets.RESEND_API_KEY || 'test-api-key' }}
          RESEND_FROM_EMAIL: ${{ secrets.RESEND_FROM_EMAIL || 'test@example.com' }}
          RESEND_REPLY_TO_EMAIL: ${{ secrets.RESEND_REPLY_TO_EMAIL || 'reply@example.com' }}

      - name: Check build output
        run: |
          if [ -d ".next" ]; then
            echo "Build successful - .next directory exists"
            ls -la .next/
          else
            echo "Build failed - .next directory not found"
            exit 1
          fi